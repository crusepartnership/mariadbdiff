#!/bin/bash
#
# This is a rather minimal example Argbash potential
# Example taken from http://argbash.readthedocs.io/en/stable/example.html
#
# ARG_OPTIONAL_SINGLE([target-file],[t],[name of target sql file (must be mounted to /target_schema)])
# ARG_OPTIONAL_SINGLE([source-file],[s],[name of source sql file (must be mounted to /source_schema)])
# ARG_HELP([Diff of two sql files])
# ARGBASH_GO()
# needed because of Argbash --> m4_ignore([
### START OF CODE GENERATED BY Argbash v2.6.1 one line above ###
# Argbash is a bash code generator used to get arguments parsing right.
# Argbash is FREE SOFTWARE, see https://argbash.io for more info
# Generated online by https://argbash.io/generate

die()
{
	local _ret=$2
	test -n "$_ret" || _ret=1
	test "$_PRINT_HELP" = yes && print_help >&2
	echo "$1" >&2
	exit ${_ret}
}

begins_with_short_option()
{
	local first_option all_short_options
	all_short_options='tsh'
	first_option="${1:0:1}"
	test "$all_short_options" = "${all_short_options/$first_option/}" && return 1 || return 0
}



# THE DEFAULTS INITIALIZATION - OPTIONALS
_arg_target_file=
_arg_source_file=

print_help ()
{
	printf '%s\n' "Diff of two sql files"
	printf 'Usage: %s [-t|--target-file <arg>] [-s|--source-file <arg>] [-h|--help]\n' "$0"
	printf '\t%s\n' "-t,--target-file: name of target sql file (must be mounted to /target_schema) (no default)"
	printf '\t%s\n' "-s,--source-file: name of source sql file (must be mounted to /source_schema) (no default)"
	printf '\t%s\n' "-h,--help: Prints help"
}

parse_commandline ()
{
	while test $# -gt 0
	do
		_key="$1"
		case "$_key" in
			-t|--target-file)
				test $# -lt 2 && die "Missing value for the optional argument '$_key'." 1
				_arg_target_file="$2"
				shift
				;;
			--target-file=*)
				_arg_target_file="${_key##--target-file=}"
				;;
			-t*)
				_arg_target_file="${_key##-t}"
				;;
			-s|--source-file)
				test $# -lt 2 && die "Missing value for the optional argument '$_key'." 1
				_arg_source_file="$2"
				shift
				;;
			--source-file=*)
				_arg_source_file="${_key##--source-file=}"
				;;
			-s*)
				_arg_source_file="${_key##-s}"
				;;
			-h|--help)
				print_help
				exit 0
				;;
			-h*)
				print_help
				exit 0
				;;
			*)
				_PRINT_HELP=yes die "FATAL ERROR: Got an unexpected argument '$1'" 1
				;;
		esac
		shift
	done
}

parse_commandline "$@"


# start MySQL
/docker-entrypoint.sh mysqld > /dev/null 2>&1 &


# Wait for MySQL to start
sleep 20

# Create Databases
mysql -proot -e "DROP DATABASE IF EXISTS source; CREATE DATABASE source;"
mysql -proot -e "DROP DATABASE IF EXISTS target; CREATE DATABASE target;"

mysql -proot source < /source_schema/$_arg_source_file
mysql -proot target < /target_schema/$_arg_target_file


/usr/local/bin/dbdiff --server1=root:root@localhost server1.source:server1.target --output=/tmp/diff.sql > /dev/null 2>&1

if [ -f /tmp/diff.sql ]; then
    cat /tmp/diff.sql
    exit 1;
fi
exit 0;
