#!/bin/bash
#
# This is a rather minimal example Argbash potential
# Example taken from http://argbash.readthedocs.io/en/stable/example.html
#
# ARG_OPTIONAL_SINGLE([target-schema],[t],[full path to target sql file])
# ARG_OPTIONAL_SINGLE([source-schema],[s],[full path to source sql file])
# ARG_HELP([Diff to sql files])
# ARGBASH_GO()
# needed because of Argbash --> m4_ignore([
### START OF CODE GENERATED BY Argbash v2.6.1 one line above ###
# Argbash is a bash code generator used to get arguments parsing right.
# Argbash is FREE SOFTWARE, see https://argbash.io for more info
# Generated online by https://argbash.io/generate

die()
{
	local _ret=$2
	test -n "$_ret" || _ret=1
	test "$_PRINT_HELP" = yes && print_help >&2
	echo "$1" >&2
	exit ${_ret}
}

begins_with_short_option()
{
	local first_option all_short_options
	all_short_options='tsh'
	first_option="${1:0:1}"
	test "$all_short_options" = "${all_short_options/$first_option/}" && return 1 || return 0
}



# THE DEFAULTS INITIALIZATION - OPTIONALS
_arg_target_schema=
_arg_source_schema=

print_help ()
{
	printf '%s\n' "Diff to sql files"
	printf 'Usage: %s [-t|--target-schema <arg>] [-s|--source-schema <arg>] [-h|--help]\n' "$0"
	printf '\t%s\n' "-t,--target-schema: full path to target sql file (no default)"
	printf '\t%s\n' "-s,--source-schema: full path to source sql file (no default)"
	printf '\t%s\n' "-h,--help: Prints help"
}

parse_commandline ()
{
	while test $# -gt 0
	do
		_key="$1"
		case "$_key" in
			-t|--target-schema)
				test $# -lt 2 && die "Missing value for the optional argument '$_key'." 1
				_arg_target_schema="$2"
				shift
				;;
			--target-schema=*)
				_arg_target_schema="${_key##--target-schema=}"
				;;
			-t*)
				_arg_target_schema="${_key##-t}"
				;;
			-s|--source-schema)
				test $# -lt 2 && die "Missing value for the optional argument '$_key'." 1
				_arg_source_schema="$2"
				shift
				;;
			--source-schema=*)
				_arg_source_schema="${_key##--source-schema=}"
				;;
			-s*)
				_arg_source_schema="${_key##-s}"
				;;
			-h|--help)
				print_help
				exit 0
				;;
			-h*)
				print_help
				exit 0
				;;
			*)
				_PRINT_HELP=yes die "FATAL ERROR: Got an unexpected argument '$1'" 1
				;;
		esac
		shift
	done
}

parse_commandline "$@"

if [ -z "$_arg_target_schema" ] || [ -z "$_arg_source_schema" ] ; then
    print_help
    exit 0
fi


SOURCE_DIR=$(dirname "$_arg_source_schema")
TARGET_DIR=$(dirname "$_arg_target_schema")
SOURCE_FILE=$(basename "$_arg_source_schema")
TARGET_FILE=$(basename "$_arg_target_schema")

docker run \
-i \
-v $SOURCE_DIR:/source_schema \
-v $TARGET_DIR:/target_schema \
luciditysoftware/mariadbdiff --source-file=$SOURCE_FILE --target-file=$TARGET_FILE
